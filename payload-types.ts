/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    person: Person;
    material: Material;
    space: Space;
    sportsTeam: SportsTeam;
    sponsor: Sponsor;
    association: Association;
    studentGuide: StudentGuide;
    link: Link;
    position: Position;
    board_section: BoardSection;
    product: Product;
    president: President;
    order: Order;
    event: Event;
    documentFolder: DocumentFolder;
    docfile: Docfile;
    video: Video;
    faq: Faq;
    place: Place;
    testimonial: Testimonial;
    feedbacklinks: Feedbacklink;
    trophies: Trophy;
    competitions: Competition;
    standings: Standing;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'admin' | 'merchant' | 'staff';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "person".
 */
export interface Person {
  id: number;
  name: string;
  position?: (number | null) | Position;
  photo?: (number | null) | Media;
  description?: string | null;
  birthday?: string | null;
  socials?:
    | {
        type: 'linkedin' | 'facebook' | 'website' | 'instagram' | 'email';
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "position".
 */
export interface Position {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "material".
 */
export interface Material {
  id: number;
  name: string;
  quantity: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "space".
 */
export interface Space {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sportsTeam".
 */
export interface SportsTeam {
  id: number;
  sport_name: string;
  fap_id?: number | null;
  showOnTeamsPage: boolean;
  coach?: (number | null) | Person;
  workouts?:
    | {
        weekDay: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
        hour: string;
        id?: string | null;
      }[]
    | null;
  emoji?:
    | (
        | '⚽️'
        | '🏀'
        | '🏈'
        | '🎾'
        | '🏐'
        | '🏉'
        | '🥏'
        | '🏓'
        | '🏸'
        | '🏒'
        | '🏑'
        | '🏏'
        | '🥍'
        | '🥅'
        | '🎱'
        | '🏹'
        | '🎿'
        | '🛷'
        | '🚴‍♂️'
        | '🏄‍♂️'
        | '🏇'
        | '🏊‍♂️'
        | '🏋️‍♂️'
        | '🤼‍♂️'
        | '🤸‍♂️'
        | '🤺'
        | '🤾‍♂️'
        | '🏌️‍♂️'
        | '🧗‍♂️'
        | '🚣‍♂️'
        | '🚵‍♂️'
        | '🏎️'
        | '🏍️'
      )
    | null;
  lineup?:
    | {
        lineupRow: (number | Person)[];
        id?: string | null;
      }[]
    | null;
  backgroundImage?: number | Media | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sponsor".
 */
export interface Sponsor {
  id: number;
  name: string;
  url: string;
  logo: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "association".
 */
export interface Association {
  id: number;
  name: string;
  in_aefeup: boolean;
  description?: string | null;
  logo: number | Media;
  address?: string | null;
  socials?:
    | {
        type: 'linkedin' | 'facebook' | 'website' | 'instagram' | 'email';
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studentGuide".
 */
export interface StudentGuide {
  id: number;
  language: 'Português' | 'Inglês';
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "link".
 */
export interface Link {
  id: number;
  label: string;
  url: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board_section".
 */
export interface BoardSection {
  id: number;
  name: string;
  type: 'presidencia' | 'departament' | 'mesa_da_assembleia_geral' | 'conselho_fiscal';
  members: (number | Person)[];
  description?: string | null;
  subgroups?:
    | {
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product".
 */
export interface Product {
  id: number;
  name: string;
  price: number;
  photo: number | Media;
  description: string;
  color: string;
  sizes?:
    | {
        size: 'XS' | 'S' | 'M' | 'L' | 'XL' | 'XXL';
        quantity: number;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "president".
 */
export interface President {
  id: number;
  name: string;
  photo?: (number | null) | Media;
  start_year: number;
  end_year: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order".
 */
export interface Order {
  id: number;
  email: string;
  mobile: string;
  products?:
    | {
        product: number | Product;
        size: 'XS' | 'S' | 'M' | 'L' | 'XL' | 'XXL';
        quantity: number;
        id?: string | null;
      }[]
    | null;
  totalPrice: number;
  status: 'pending' | 'paid' | 'canceled';
  withdrawal?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event".
 */
export interface Event {
  id: number;
  title: string;
  type: string;
  description: string;
  image: number | Media;
  link?:
    | {
        description?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documentFolder".
 */
export interface DocumentFolder {
  id: number;
  folder_name: string;
  section_name?: ('Direção' | 'Assembleia Geral') | null;
  files: (number | Docfile)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "docfile".
 */
export interface Docfile {
  id: number;
  name: string;
  type: 'regulation' | 'other';
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video".
 */
export interface Video {
  id: number;
  title: string;
  thumbnail?: number | Media | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  quest: string;
  ans: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "place".
 */
export interface Place {
  id: number;
  name: string;
  description?: string | null;
  position: {
    lat: number;
    lng: number;
  };
  schedule?:
    | {
        day: string;
        hours: string;
        id?: string | null;
      }[]
    | null;
  category: 'Espaços de Estudo' | 'Alimentação' | 'Alojamento' | 'Mobilidade';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonial".
 */
export interface Testimonial {
  id: number;
  name: string;
  photo?: (number | null) | Media;
  position: string;
  content: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feedbacklinks".
 */
export interface Feedbacklink {
  id: number;
  name: string;
  link: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trophies".
 */
export interface Trophy {
  id: number;
  year: string;
  trophies?:
    | {
        competition: number | Competition;
        sportsTeam: number | SportsTeam;
        standing: number | Standing;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "competitions".
 */
export interface Competition {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "standings".
 */
export interface Standing {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}